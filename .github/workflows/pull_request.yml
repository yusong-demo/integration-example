name: pull request
on:
  pull_request:
    types: [opened, reopened, synchronize, closed]
permissions:
  actions: write
  contents: write
  pull-requests: write
  id-token: write
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  deploy_flyio:
    name: Deploly fly.io review app
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest
    outputs:
      TEST_URL: ${{ steps.deploy-pr.outputs.url }}
    environment:
      name: pr-${{ github.event.number }}
      url: ${{ steps.deploy-pr.outputs.url }}
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - uses: actions/checkout@v4

      - name: Deploy PR
        id: deploy-pr
        uses: superfly/fly-pr-review-apps@1.2.0
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  static_and_unit_test:
    name: Static test and unit test
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        run: npm ci

      - name: Lint test
        run: npm run ci-lint

      - name: Unit test
        run: npm run ci-test

      - uses: actions/upload-artifact@v3
        with:
          name: lint-output
          path: lint.log

      - uses: actions/upload-artifact@v3
        with:
          name: unit-test-output
          path: ./reports

  functional_test:
    needs: [deploy_flyio]
    name: Functional test
    runs-on: ubuntu-latest
    env:
      SAUCE_USERNAME: sky172839465
      SAUCE_ACCESS_KEY: ${{secrets.SAUCE_ACCESS_KEY}}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        run: npm ci

      - name: Run functional test on saucelabs
        env:
          TEST_URL: ${{needs.deploy_flyio.outputs.TEST_URL}}
        run: |
          echo TEST_URL=$TEST_URL
          npm run ci-functional

      - name: Generate functional test allure report
        run: npm run functional:generate-report

      - uses: actions/upload-artifact@v3
        with:
          name: functional-test-output
          path: ./output

      - name: Get report info
        if: ${{ always() }}
        uses: actions/github-script@v6
        with:
          script: |
            const { getGHPageInfo } = require('./scripts/ghpage-helper')
            const info = await getGHPageInfo({ context })
            core.exportVariable('E2E_REPORT_DIR', `./${info.destination_dir}`)

      - name: Upload report to GitHub page
        if: ${{ always() }}
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./e2e-reports
          destination_dir: ${{ env.E2E_REPORT_DIR }}
          commit_message: "docs: ü§ñ upload pr report ${{ github.event.head_commit.message }}"
          user_name: "github-actions[bot]"
          user_email: "github-actions[bot]@users.noreply.github.com"

  clean_up:
    needs: [deploy_flyio, functional_test]
    name: Clean up
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        run: npm ci

      - uses: actions/download-artifact@v3
        with:
          name: lint-output

      - uses: actions/download-artifact@v3
        with:
          name: unit-test-output
          path: ./reports

      - uses: actions/download-artifact@v3
        with:
          name: functional-test-output
          path: ./output

      - name: Get report info
        if: ${{ always() }}
        uses: actions/github-script@v6
        with:
          script: |
            const { getGHPageInfo } = require('./scripts/ghpage-helper')
            const info = await getGHPageInfo({ context })
            console.log(info)
            core.exportVariable('GH_PAGE_URL', info.ghPage)

      - id: get-date
        run: |
          echo "DATE=$(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_OUTPUT

      - name: Get build comment
        if: ${{ always() }}
        uses: actions/github-script@v6
        env:
          TEST_URL: ${{needs.deploy_flyio.outputs.TEST_URL}}
          DATE: ${{ steps.get-date.outputs.DATE }}
        with:
          script: |
            const getComment = require('./scripts/get-comment')
            const comment = await getComment({ context })
            console.log(comment)
            core.exportVariable('BUILD_COMMENT', comment)
          result-encoding: string

      - name: Comment build result
        if: ${{ always() }}
        uses: unsplash/comment-on-pr@master
        with:
          msg: ${{ env.BUILD_COMMENT }}
          check_for_duplicate_msg: true
          delete_prev_regex_msg: "Build Result"

      - name: Add job summary
        if: ${{ always() }}
        run: |
          echo "${{ env.BUILD_COMMENT }}" >> $GITHUB_STEP_SUMMARY

      - name: Last check build status
        if: ${{ always() }}
        uses: actions/github-script@v6
        with:
          script: |
            if (process.env.BUILD_COMMENT.includes('‚ùå')) {
              console.error('Job failed.')
              process.exit(1)
            }

  delete_develpoment:
    name: Delete Develpoment
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Delete pr app
        id: deploy
        uses: superfly/fly-pr-review-apps@1.2.0
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: üóë Delete deployment environment
        uses: strumwolf/delete-deployment-environment@v2.2.3
        with:
          token: ${{ secrets.SOURCE_TREE_PROTECTED_BRANCH_TOKEN }}
          environment: pr-${{ github.event.number }}
